#!/bin/bash

### Environment 
source @sub_PREFIX@/etc/sourceme.sh

unset MRNET_OUTPUT_LEVEL
#export LOGDIR=`pwd`/mrnet_log/${SLURM_JOBID}
#mkdir -p $LOGDIR
#export MRNET_OUTPUT_LEVEL=3
#export MRNET_DEBUG_LOG_DIRECTORY=${LOGDIR}

### Check arguments
if [ $# -lt 3 ]; then
	echo "`basename $0`: Invalid arguments."
	echo "Syntax: `basename $0` <nprocs> <front-end> [front-end-args]"
	exit
fi
NUM_BACKENDS=$1
shift
FRONTEND=$1
shift
FRONTEND_ARGS=$@

SLURM_MLIST=sl-list-${SLURM_JOBID}
CP_MLIST=cp-list-${SLURM_JOBID}
BE_MLIST=be-list-${SLURM_JOBID}

### Get assigned resources
/opt/perf/bin/sl_get_machine_list | sort > ${SLURM_MLIST}
SLURM_NPROC=`cat ${SLURM_MLIST} | wc -l`

### Get resources for the MRNet
let CP_NPROC=${SLURM_NPROC}-${NUM_BACKENDS}
head -n${CP_NPROC} ${SLURM_MLIST} | awk '{ print $1 "-myrinet1" }' > ${CP_MLIST}

### Get resources for the back-ends
tail -n${NUM_BACKENDS} ${SLURM_MLIST} | awk '{ print $1 "-myrinet1" }' > ${BE_MLIST}

### Build MRNet topology 
TOPOLOGY=top-${SLURM_JOBID}

# Search for a square number of comm nodes
let NUM_COMM_NODES=$CP_NPROC;
if [ $NUM_COMM_NODES -ge ${NUM_BACKENDS} ] ; then
	let NUM_COMM_NODES=$NUM_BACKENDS/2;
fi 
if [ $NUM_COMM_NODES -gt 0 ]; then
    c=$[ $NUM_BACKENDS % $NUM_COMM_NODES ]
    while [ $c -ne 0 ] && [ $NUM_COMM_NODES -gt 1 ] ; do
        let NUM_COMM_NODES=$NUM_COMM_NODES-1
        c=$[ $NUM_BACKENDS % $NUM_COMM_NODES ]
    done
fi

if [ $NUM_COMM_NODES -ge 2 ]; then
    # We have enough resources for comm nodes (2 at least + the root)
    echo "`basename $0`: Using $NUM_COMM_NODES CP's."
	SPEC="${NUM_COMM_NODES}:"
	let BExCP=${NUM_BACKENDS}/${NUM_COMM_NODES};
	let EXTRA=${NUM_BACKENDS}%${NUM_COMM_NODES};
	for (( i=0; i<${NUM_COMM_NODES}; i++ ))
	do
		if [ $i -lt $EXTRA ]; then
			SPEC="${SPEC}`expr ${BExCP} + 1`"
		else
			SPEC="${SPEC}${BExCP}"
		fi
		if [ $i -lt `expr ${NUM_COMM_NODES} - 1` ]; then
			SPEC="${SPEC},"
		fi
	done
	echo "${MRNET_HOME}/bin/mrnet_topgen -b ${BE_MLIST} -c ${CP_MLIST} -q 4 -r 4 -t g:${SPEC}"
	${MRNET_HOME}/bin/mrnet_topgen -b ${BE_MLIST} -c ${CP_MLIST} -q 4 -r 4 -t g:${SPEC} -o ${TOPOLOGY}
  
elif [ $CP_NPROC -ge 1 ]; then
    # We have resources for a root-topology only
	echo "`basename $0`: Using root-only topology."
	echo "${MRNET_HOME}/bin/mrnet_topgen -b ${BE_MLIST} -q 4 -r 4 -t g:${NUM_BACKENDS}"
	${MRNET_HOME}/bin/mrnet_topgen -b ${BE_MLIST} -q 4 -r 4 -t g:${NUM_BACKENDS} -o ${TOPOLOGY}
else
    # Not enough resources for the MRNet
    let MIN_NPROC=${NUM_BACKENDS}+1
    echo "`basename $0`: Insufficient resources! (requested ${SLURM_NPROC}, minimum ${MIN_NPROC})"
    exit
fi

### Run the front-end
export MRNAPP_TOPOLOGY=${TOPOLOGY}
echo "Executing front-end..."
echo "${FRONTEND} ${FRONTEND_ARGS}"
${FRONTEND} ${FRONTEND_ARGS} 

### Clean resources lists and stuff
#rm -f ${SLURM_MLIST} ${CP_MLIST} ${BE_MLIST} ${TOPOLOGY}
#rmdir ${LOGDIR} 
